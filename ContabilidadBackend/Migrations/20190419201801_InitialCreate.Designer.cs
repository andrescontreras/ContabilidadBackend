// <auto-generated />
using System;
using ContabilidadBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContabilidadBackend.Migrations
{
    [DbContext(typeof(ContabilidadContext))]
    [Migration("20190419201801_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContabilidadBackend.Models.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Mes")
                        .HasColumnType("INT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime?>("UltimoCambio")
                        .HasColumnType("DATE");

                    b.Property<int>("ValorActual")
                        .HasColumnType("INT");

                    b.Property<int?>("ValorMax")
                        .HasColumnType("INT");

                    b.Property<int?>("ValorMin")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("Cuentas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Banco",
                            ValorActual = 1000000,
                            ValorMin = 200000
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Caja",
                            ValorActual = 300000
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Bus",
                            ValorActual = 0,
                            ValorMax = 300000
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Almuerzo",
                            ValorActual = 0,
                            ValorMax = 300000
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Prestamo",
                            ValorActual = 0
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "GastoExtra",
                            ValorActual = 0
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "IngresoNomina",
                            ValorActual = 0
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "IngresoExtra",
                            ValorActual = 0
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Ahorro",
                            ValorActual = 0
                        });
                });

            modelBuilder.Entity("ContabilidadBackend.Models.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CuentaId");

                    b.Property<int>("Tipo")
                        .HasColumnType("INT");

                    b.Property<int>("TransaccionId");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.HasIndex("TransaccionId");

                    b.ToTable("Movimientos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CuentaId = 2,
                            Tipo = 1,
                            TransaccionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CuentaId = 2,
                            Tipo = 1,
                            TransaccionId = 2
                        },
                        new
                        {
                            Id = 3,
                            CuentaId = 3,
                            Tipo = 0,
                            TransaccionId = 1
                        },
                        new
                        {
                            Id = 4,
                            CuentaId = 4,
                            Tipo = 0,
                            TransaccionId = 2
                        });
                });

            modelBuilder.Entity("ContabilidadBackend.Models.TipoTransaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Movimiento1Id")
                        .HasColumnType("INT");

                    b.Property<int>("Movimiento2Id")
                        .HasColumnType("INT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INT");

                    b.Property<int>("TipoMovimiento1")
                        .HasColumnType("INT");

                    b.Property<int>("TipoMovimiento2")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("TipoTransaccion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Movimiento1Id = 7,
                            Movimiento2Id = 1,
                            Tipo = 0,
                            TipoMovimiento1 = 1,
                            TipoMovimiento2 = 0
                        },
                        new
                        {
                            Id = 2,
                            Movimiento1Id = 1,
                            Movimiento2Id = 2,
                            Tipo = 1,
                            TipoMovimiento1 = 1,
                            TipoMovimiento2 = 0
                        },
                        new
                        {
                            Id = 3,
                            Movimiento1Id = 5,
                            Movimiento2Id = 2,
                            Tipo = 2,
                            TipoMovimiento1 = 1,
                            TipoMovimiento2 = 0
                        },
                        new
                        {
                            Id = 4,
                            Movimiento1Id = 9,
                            Movimiento2Id = 2,
                            Tipo = 3,
                            TipoMovimiento1 = 1,
                            TipoMovimiento2 = 0
                        },
                        new
                        {
                            Id = 5,
                            Movimiento1Id = 2,
                            Movimiento2Id = 5,
                            Tipo = 4,
                            TipoMovimiento1 = 1,
                            TipoMovimiento2 = 0
                        },
                        new
                        {
                            Id = 6,
                            Movimiento1Id = 2,
                            Movimiento2Id = 3,
                            Tipo = 5,
                            TipoMovimiento1 = 1,
                            TipoMovimiento2 = 0
                        },
                        new
                        {
                            Id = 7,
                            Movimiento1Id = 2,
                            Movimiento2Id = 4,
                            Tipo = 6,
                            TipoMovimiento1 = 1,
                            TipoMovimiento2 = 0
                        },
                        new
                        {
                            Id = 8,
                            Movimiento1Id = 2,
                            Movimiento2Id = 6,
                            Tipo = 7,
                            TipoMovimiento1 = 1,
                            TipoMovimiento2 = 0
                        });
                });

            modelBuilder.Entity("ContabilidadBackend.Models.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Estado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DATE");

                    b.Property<int>("TipoTransaccionId")
                        .HasColumnType("INT");

                    b.Property<int>("Valor")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("TipoTransaccionId");

                    b.ToTable("Transacciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "pago buses mes de abril",
                            Fecha = new DateTime(2019, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TipoTransaccionId = 6,
                            Valor = 50000
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "pago almuerzos mes de abril",
                            Fecha = new DateTime(2019, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TipoTransaccionId = 7,
                            Valor = 30000
                        });
                });

            modelBuilder.Entity("ContabilidadBackend.Models.Movimiento", b =>
                {
                    b.HasOne("ContabilidadBackend.Models.Cuenta", "Cuenta")
                        .WithMany("Movimientos")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ContabilidadBackend.Models.Transaccion", "Transaccion")
                        .WithMany("Movimientos")
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ContabilidadBackend.Models.Transaccion", b =>
                {
                    b.HasOne("ContabilidadBackend.Models.TipoTransaccion", "TipoTransaccion")
                        .WithMany("Transacciones")
                        .HasForeignKey("TipoTransaccionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
